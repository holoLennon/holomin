/*
 * zmax 
 * 
 */

package com.zmax.yijian.web.controller.restful.spec;

import java.io.File;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.zmax.exception.BoException;
import com.zmax.exception.NeedLoginException;
import com.zmax.exception.RightException;
import com.zmax.utils.easyui.Json;
import com.zmax.utils.file.FileNameUtils;
import com.zmax.yijian.biz.service.my.UserService;
import com.zmax.yijian.biz.service.spec.SpecRelationService;
import com.zmax.yijian.biz.service.spec.SpecSmsService;
import com.zmax.yijian.biz.service.spec.SpecWxService;
import com.zmax.yijian.common.conf.Conf;
import com.zmax.yijian.common.dal.bean.User;
import com.zmax.yijian.web.controller.restful.RestSpecUtils;
import com.zmax.yijian.web.controller.restful.RestUtils;
import com.zmax.yijian.web.controller.restful.entity.ClientInfo;
import com.zmax.yijian.web.controller.spec.pub.SpecPubController;
import com.zmax.zbabi.files.FileRepository;

/**
 * RestFul控制 
 * 自定义功能
 * 
 *
 */
@Controller
@RequestMapping("/rest")
public class FileUploadRestController {
	/** 日志实例 */
	private static final Logger logger = Logger.getLogger(FileUploadRestController.class);

	@Autowired
	UserService userService;

	@Autowired
	RestUtils restUtils;
	@Autowired
	RestSpecUtils restSpecUtils;

	@Autowired
	SpecPubController specPubController;
	@Autowired
	SpecWxService specWxService;
	@Autowired
	SpecSmsService specSmsService;
	@Autowired
	SpecRelationService specRelationService;
	@Autowired
	FileRepository fileRepository;
	
	/**
	 * 文件上传
	 * @param response
	 * @param request
	 * @param clientInfo
	 * @param username 
	 * @return
	 * @throws BoException
	 * @throws NeedLoginException
	 * @throws RightException
	 * @throws Exception
	 */
	@RequestMapping(value = "/uploadj")
	@ResponseBody
	public Json fileupload(HttpServletResponse response,HttpServletRequest request,ClientInfo clientInfo,String username)throws BoException, NeedLoginException, RightException, Exception{
		if (logger.isDebugEnabled())
			logger.debug("username=" + username);

		try {
			List<FileItem> items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request); 
			String list="";
			 for (FileItem item : items) {
			     if (item.isFormField()) {
			    	 //处理表单内容 ..
			     } else {
			    	 //处理上传的文件
			    	 String fileName=storeIOcFileItem(request, item, 0);
			    	 if(StringUtils.isBlank(list))
			    		 list+=fileName;
			    	 else
			    		 list+=","+fileName;
			     }
			 }
			if (logger.isDebugEnabled())
				logger.debug("uploadFile,fileName=" + list);
			//返回文件名
			return new Json(true,list);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return new Json(false,"系统错误，文件上失败");
		}
	}
	/**
	 * 接受图片，保存，并返回url文件名
	 * @param request
	 * @param file
	 * @return
	 */
	private String storeIOcFileItem(HttpServletRequest request, FileItem item, Integer act) {
		User user=new User(0);
		return userFiles(user, item);

	}
	/**
	 * 根据用户+图片保存，并返回
	 * @param user
	 * @param item
	 * @return
	 */
	private String userFiles(User user,FileItem item){
		 // 此时的文件名包含了完整的路径，得注意加工一下  
		String filename = item.getName();
		logger.info("完整的文件名：" + filename);
		//System.out.println("完整的文件名：" + filename);  
		int index = filename.lastIndexOf("\\");  
		filename = filename.substring(index + 1, filename.length());

		// ex./zweb//userfiles/users/2/201409/aaa.png
		String sdest=null;
		sdest=MessageFormat.format(Conf.fileUuploadPath,user.getId(),new SimpleDateFormat("yyyyMM").format(new Date()))
					+"/"+filename;
		// ex./zweb//userfiles/users/2/201409/20140931235959abcd.png
		sdest=FileNameUtils.generateRandomUrlYMdHms(sdest);
		File dest=fileRepository.retrieve(sdest);
		if(dest.exists())dest.delete();

		//目标目录的父目录，不存在则创建
		if (!dest.getParentFile().exists()) 
			dest.getParentFile().mkdirs();
		try {
			item.write(dest);  
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
		return Conf.base+sdest;	
	}
	/**
	 * 接受图片，保存，并返回url文件名
	 * @param request
	 * @param file
	 * @return
	 */
	private String storeIOc(HttpServletRequest request, MultipartFile file, Integer act) {
		User user=new User(0);
		// ex./zweb//userfiles/users/2/201409/aaa.png
		String sdest=null;
		sdest=MessageFormat.format(Conf.fileUuploadPath,user.getId(),new SimpleDateFormat("yyyyMM").format(new Date()))
					+"/"+file.getOriginalFilename();
		// ex./zweb//userfiles/users/2/201409/20140931235959abcd.png
		sdest=FileNameUtils.generateRandomUrlYMdHms(sdest);
		File dest=fileRepository.retrieve(sdest);
		if(dest.exists())dest.delete();

		//目标目录的父目录，不存在则创建
		if (!dest.getParentFile().exists()) 
			dest.getParentFile().mkdirs();
		try {
			file.transferTo(dest);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
		return Conf.base+sdest;

	}
}
