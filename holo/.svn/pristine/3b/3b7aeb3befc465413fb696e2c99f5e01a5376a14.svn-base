/*
        user.roleId=5;
        user.isauto=0; * AreacnController Powered By 张闽昕
 * 
 * 
 * Since 2008 - 2012
 */

package com.zmax.yijian.web.controller.spec.user;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Properties;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.octo.captcha.service.image.ImageCaptchaService;
import com.zmax.conf.Addr;
import com.zmax.conf.AttrStatic;
import com.zmax.conf.SessionName;
import com.zmax.exception.BoException;
import com.zmax.utils.easyui.Json;
import com.zmax.utils.string.Md5PwdEncoder;
import com.zmax.utils.string.StringUtilz;
import com.zmax.yijian.biz.service.common.*;
import com.zmax.yijian.biz.service.my.*;
import com.zmax.yijian.biz.service.spec.SpecUserService;
import com.zmax.yijian.common.conf.Propmy;
import com.zmax.yijian.common.dal.bean.*;
import com.zmax.yijian.web.controller.base.BaseAdminController;
import com.zmax.yijian.web.controller.base.BaseCadminController;
import com.zmax.yijian.web.controller.base.BaseDoctorController;
import com.zmax.yijian.web.controller.base.BaseDruggistController;
import com.zmax.yijian.web.controller.base.BaseMemberController;
import com.zmax.yijian.web.controller.base.BaseOperController;
import com.zmax.yijian.web.controller.base.BaseSellerController;
import com.zmax.yijian.web.controller.base.base.BaseController;
import com.zmax.yijian.web.utils.SpringInit;




/**
 * 管理员控制器
 * 
 * @author 张闽昕
 * @Since - 2012-09-18
 */

@Controller
@RequestMapping("/user")
public class SpecUserController extends BaseController{
	/**日志实例*/
	private static final Logger logger = Logger.getLogger(SpecUserController.class);

	@Autowired
	TbfieldService tbfieldService;
	@Autowired
	WebsetService websetService;
	@Autowired
	MyisoService myisoService;
	@Autowired
	MyisouService myisouService;

	@Autowired
	PermittableService permittableService;
	@Autowired
	PermitfieldService permitfieldService;

	@Autowired
	UserService userService;
	@Autowired
	AdminService adminService;
	@Autowired
	CadminService cadminService;
	@Autowired
	OperService operService;
	@Autowired
	MemberService memberService;
	@Autowired
	DoctorService doctorService;
	@Autowired
	DruggistService druggistService;
	@Autowired
	SellerService sellerService;
	
	@Autowired
	CommonzSvrUitls commonzSvrUitls;
	@Autowired
	CommonzSvrUitlsSpec commonzSvrUitlsSpec;
	@Autowired
	ImageCaptchaService imageCaptchaService;
	@Autowired
	SpecUserService specUserService;

	
	@Autowired
	BaseAdminController baseAdminController;
	@Autowired
	BaseCadminController baseCadminController;
	@Autowired
	BaseMemberController baseMemberController;	
	@Autowired
	BaseOperController baseOperController;
	@Autowired
	BaseDoctorController baseDoctorController;
	@Autowired
	BaseDruggistController baseDruggistController;
	@Autowired
	BaseSellerController baseSellerController;
	/**
	 * 首页
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/index")
	public String index(HttpServletRequest request,HttpServletResponse response,ModelMap model) {

		return "/user/index";
	}
	/**
	 * 头部框架
	 * @param request
	 * @param response
	 * @param model
	 * @param session
	 * @return
	 */
	@RequestMapping(value="/top")
	public String top(HttpServletRequest request,HttpServletResponse response,ModelMap model,HttpSession session) {

		return "/user/top";
	}

	/**
	 * 左框，主要是菜单
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/left")
	public String left(HttpServletRequest request,HttpServletResponse response,ModelMap model) {
		return "/user/left";
	}
	/**
	 * 左框菜单
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/leftmenutree")
	public String leftmenutree(HttpServletRequest request,HttpServletResponse response,ModelMap model) {
		return "/user/leftmenutree";
	}
	/**
	 * 下面，主要是版权之类信息
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/foot")
	public String foot(HttpServletRequest request,HttpServletResponse response,ModelMap model) {
		return "/user/foot";
	}

	/**
	 * 右框，主要内容显示，刚登录显示系统信息
	 * @param request
	 * @param response
	 * @param model
	 * @param session
	 * @return
	 */
	@RequestMapping(value="/indexright")
	public String right(HttpServletRequest request,HttpServletResponse response,ModelMap model,HttpSession session) {
		User user=(User)session.getAttribute(SessionName.user);
		Properties props = System.getProperties();
		Runtime runtime = Runtime.getRuntime();
		long freeMemoery = runtime.freeMemory();
		long totalMemory = runtime.totalMemory();
		long usedMemory = totalMemory - freeMemoery;
		long maxMemory = runtime.maxMemory();
		long useableMemory = maxMemory - totalMemory + freeMemoery;
		model.addAttribute("props", props);
		model.addAttribute("freeMemoery", freeMemoery);
		model.addAttribute("totalMemory", totalMemory);
		model.addAttribute("usedMemory", usedMemory);
		model.addAttribute("maxMemory", maxMemory);
		model.addAttribute("useableMemory", useableMemory);
		//model.addAttribute("version", version);
		model.addAttribute("user", user);
		//model.addAttribute("flowMap", cmsStatisticSvc.getWelcomeSiteFlowData(site.getId()));
		return "/user/indexright";
	}	

	/**
	 * tesst
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 */
	@RequestMapping(value="/test",method=RequestMethod.GET)
	public String test(HttpServletRequest request,HttpServletResponse response,ModelMap model) {

		return "/user/test";
	}
	/**
	 * 从用户页进入用户Admin/Member/Company的列表，不存在的话，创建
	 * @param request 
	 * 		<br>ex. 'user/User/userObj/index.html?queryhq=id=1&newobj=id=1;
	 * @param response
	 * @param model
	 * @param obj
	 * @param queryhq
	 * @param newobj
	 * @return
	 */
	@RequestMapping(value="/User/userObj/index",method=RequestMethod.GET)
	public String userIndexToUserObj(HttpServletRequest request,HttpServletResponse response,ModelMap model,String queryhq,String newobj) {
		//queryqh的第二项是id
		Integer id=Integer.parseInt(queryhq.split("=")[1].replace("'", ""));
		User user=userService.get(null, id);
		return userToUserobj(request, response, model, queryhq, newobj, user);

	}
	/**
	 * 执行脚本
	 * @param request
	 * @param response
	 * @param model
	 * @param sh ex./root/aaa
	 */
	@RequestMapping(value="/lrsh",method=RequestMethod.GET)
	public String lrsh(HttpServletRequest request,HttpServletResponse response,ModelMap model,String sh) {
		String msg="命令已经发送";
		try {
			Runtime.getRuntime().exec("sh "+sh+".sh");
		} catch (Exception e) {
			// e.printStackTrace();
			logger.error(e);
			msg=e.getMessage();
		}
		model.addAttribute("errorMsg", msg);
		return "/error/msg";
	}	
	
	/**
	 * 后台页面上点击，查询基本信息，根据User的类型返回跳转Member/Company/Oper等页面,没有的话，会创建一个
	 * 如果不存在，创建
	 * @param request
	 * @param response
	 * @param model
	 * @param queryhq
	 * @param newobj
	 * @param user
	 * @return
	 */
	public String userToUserobj(HttpServletRequest request,HttpServletResponse response,ModelMap model,String queryhq,String newobj,User user){
		if(user==null)
			return ERRPAGE;
		int usertype=user.getRoleId();
		switch (usertype) {
		case AttrStatic.ROLE_ADMIN:
		{
			Admin obj=adminService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=adminService.get(null, user.getId());
			}	
			return baseAdminController.index(request, response, model, obj, queryhq, newobj,null);
		}
		case AttrStatic.ROLE_CADMIN:
		{
			Cadmin obj=cadminService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=cadminService.get(null, user.getId());
			}
			return baseCadminController.index(request, response, model, obj, queryhq, newobj,null);
		}
		case AttrStatic.ROLE_OPER:
		{
			Oper obj=operService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=operService.get(null, user.getId());
			}
			return baseOperController.index(request, response, model, obj, queryhq, newobj,null);
		}
	
		case AttrStatic.ROLE_MEMBER:
		{
			Member obj=memberService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=memberService.get(null, user.getId());
			}	
			return baseMemberController.index(request, response, model, obj, queryhq, newobj,null);
		}
		case AttrStatic.ROLE_DOCTOR:
		{
			Doctor obj=doctorService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=doctorService.get(null, user.getId());
			}	
			return baseDoctorController.index(request, response, model, obj, queryhq, newobj,null);
		}	
		case AttrStatic.ROLE_SELLER:
		{
			Seller obj=sellerService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=sellerService.get(null, user.getId());
			}	
			return baseSellerController.index(request, response, model, obj, queryhq, newobj,null);
		}	
		case AttrStatic.ROLE_DRUGGIST:
		{
			Druggist obj=druggistService.get(null, user.getId());
			if(obj==null){
				specUserService.createDbAfterUser1(user);
				obj=druggistService.get(null, user.getId());
			}	
			return baseDruggistController.index(request, response, model, obj, queryhq, newobj,null);
		}	
		default:
			break;
		}
		return ERRPAGE;		
	}
}