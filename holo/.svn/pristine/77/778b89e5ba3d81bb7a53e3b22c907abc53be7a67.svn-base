/*
 * zmax 
 * 
 */


//  
package com.zmax.yijian.common.dal.bean;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.*;
import javax.validation.constraints.*;
import org.hibernate.validator.constraints.*;
import javax.persistence.Entity;
import com.zmax.utils.string.JsonUtilAli;

import org.apache.commons.lang.builder.*;
import java.text.*;
import java.util.*;
import com.zmax.yijian.common.dal.bean.base.BaseEntity;


/**
 * 商品类型<br/>一些可以重复的频道，比如：最热，春季
 * @author zmax
 * @version 1.0
 * @since 
 */

@Entity
@Table(name = "product_type")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)//可读可写
public class ProductType extends BaseEntity{
	
	//alias
	public static final String TABLE_ALIAS = "商品类型";

	//date formats
	
	//columns START
	/**序号ID Integer   */
	@Max(99999999999L)
	
	private Integer id;
	/**关键字 String  ID的补充 */
	@Length(max=20)
	
	private String ckey;
	/**名称 String   */
	@Length(max=100)
	
	private String channelName;
	/**状态 Integer default=1  */
	@Max(999L)
	
	private Integer statusValidOrNot = 1;
	/**父ID Integer default=0  */
	@Max(99999999999L)
	
	private Integer parentid = 0;
	/**排列顺序 Integer default=99  */
	@Max(999L)
	
	private Integer priority = 99;
	/**孩子数量 Integer default=0  */
	@Max(99999999999L)
	
	private Integer childrennum = 0;
	/**祖先 String  逗号分开 */
	@Length(max=20)
	
	private String family;
	/**生成地址 String   */
	@Length(max=200)
	
	private String genurl;
	/**图标名称 String   */
	@Length(max=50)
	
	private String icon;
	/**图 String   */
	@Length(max=200)
	
	private String img;
	/**包含商品列表*/
	private List<ProductTypeLinkProduct> listproducttypelinkproduct;
	//columns END
	/**
	 * 设置默认值
	 * @param _this
	 */
	public void makedefault(ProductType _this){
		_this.statusValidOrNot=1;
		_this.parentid=0;
		_this.priority=99;
		_this.childrennum=0;
	}
	public ProductType(){
		makedefault(this);
	}
	public ProductType(Integer _id){
		this.id=_id;
		makedefault(this);
	}
	/**
	 * 精简版构造，在创建提交数据库时应该使用saveCreate
	 * @param ckey String 关键字  ID的补充 
	 * @param channelName String 名称   
	 * @param statusValidOrNot Integer 状态 default=1  
	 * @param parentid Integer 父ID default=0  
	 * @param priority Integer 排列顺序 default=99  
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param genurl String 生成地址   
	 * @param icon String 图标名称   
	 * @param img String 图   
	* @param notuse String 没用
	 */
	public ProductType(String ckey ,String channelName ,Integer statusValidOrNot ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String genurl ,String icon ,String img ,String notuse) {
		super();
		this.ckey = ckey;
		this.channelName = channelName;
		this.statusValidOrNot = statusValidOrNot;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.genurl = genurl;
		this.icon = icon;
		this.img = img;
	}
	/**
	 * 不包括自动变量的构造
	 * @param id Integer 序号ID   
	 * @param ckey String 关键字  ID的补充 
	 * @param channelName String 名称   
	 * @param statusValidOrNot Integer 状态 default=1  
	 * @param parentid Integer 父ID default=0  
	 * @param priority Integer 排列顺序 default=99  
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param genurl String 生成地址   
	 * @param icon String 图标名称   
	 * @param img String 图   
	* @param notuse String 没用
	 */
	public ProductType(Integer id ,String ckey ,String channelName ,Integer statusValidOrNot ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String genurl ,String icon ,String img ,String notuse) {
		super();
		this.id = id;
		this.ckey = ckey;
		this.channelName = channelName;
		this.statusValidOrNot = statusValidOrNot;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.genurl = genurl;
		this.icon = icon;
		this.img = img;
	}
	/**
	 * 全部数据的构造，包括了对象字段
	 * @param id Integer 序号ID   
	 * @param ckey String 关键字  ID的补充 
	 * @param channelName String 名称   
	 * @param statusValidOrNot Integer 状态 default=1  
	 * @param parentid Integer 父ID default=0  
	 * @param priority Integer 排列顺序 default=99  
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param genurl String 生成地址   
	 * @param icon String 图标名称   
	 * @param img String 图   
	 * @param listproducttypelinkproduct String 包含商品列表   
	* @param notuse String 没用
	 */
	public ProductType(Integer id ,String ckey ,String channelName ,Integer statusValidOrNot ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String genurl ,String icon ,String img ,List<ProductTypeLinkProduct> listproducttypelinkproduct ,String notuse,Object notuse2) {
		super();
		this.id = id;
		this.ckey = ckey;
		this.channelName = channelName;
		this.statusValidOrNot = statusValidOrNot;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.genurl = genurl;
		this.icon = icon;
		this.img = img;
		this.listproducttypelinkproduct = listproducttypelinkproduct;
	}

	/**我的中文名称*/
	private String myname;
	/**我的中文名称*/
	@Transient
	
	//@JSONField(serialize = false)
	public String getMyname() {
		myname=(myname==null)?""+channelName+" ":myname;
		return myname;
	}
	/**我的中文名称*/
	public void setMyname(String myname) {
		this.myname = myname;
	}
	/**我的带id中文名称*/
	private String mynameid;
	/**我的带id中文名称*/
	@Transient
	
	//@JSONField(serialize = false)
	public String getMynameid() {
		mynameid=(mynameid==null)?"["+id+"]"+channelName+" ":mynameid;
		return mynameid;
	}
	/**我的带id中文名称*/
	public void setMynameid(String mynameid) {
		this.mynameid = mynameid;
	}
	/**设置主键*/
	public void setId(Integer value) {
		this.id = value;
	}
	/**获取主键*/
	

	@Id @GeneratedValue(generator="custom-id")
	@GenericGenerator(name="custom-id", strategy = "identity")
	@Column(name = "id",  unique = false, nullable = false, insertable = true, updatable = true, length = 11)
	public Integer getId() {
		return this.id;
	}
	
	/**获取关键字 ID的补充 */
	

	@Column(name = "ckey", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getCkey() {
		return this.ckey;
	}
	/**设置关键字 ID的补充 */

	public void setCkey(String value) {
		this.ckey = value;
	}
	/**获取名称  */
	

	@Column(name = "channel_name", unique = false, nullable = true, insertable = true, updatable = true, length = 100)
	public String getChannelName() {
		return this.channelName;
	}
	/**设置名称  */

	public void setChannelName(String value) {
		this.channelName = value;
	}
	/**获取状态  */
	

	@Column(name = "status_valid_or_not", unique = false, nullable = true, insertable = true, updatable = true, length = 3)
	public Integer getStatusValidOrNot() {
		return this.statusValidOrNot;
	}
	/**设置状态  */

	public void setStatusValidOrNot(Integer value) {
		this.statusValidOrNot = value;
	}
	/**获取父ID  */
	

	@Column(name = "parentid", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Integer getParentid() {
		return this.parentid;
	}
	/**设置父ID  */

	public void setParentid(Integer value) {
		this.parentid = value;
	}
	/**获取排列顺序  */
	

	@Column(name = "priority", unique = false, nullable = true, insertable = true, updatable = true, length = 3)
	public Integer getPriority() {
		return this.priority;
	}
	/**设置排列顺序  */

	public void setPriority(Integer value) {
		this.priority = value;
	}
	/**获取孩子数量  */
	

	@Column(name = "childrennum", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Integer getChildrennum() {
		return this.childrennum;
	}
	/**设置孩子数量  */

	public void setChildrennum(Integer value) {
		this.childrennum = value;
	}
	/**获取祖先 逗号分开 */
	

	@Column(name = "family", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getFamily() {
		return this.family;
	}
	/**设置祖先 逗号分开 */

	public void setFamily(String value) {
		this.family = value;
	}
	/**获取生成地址  */
	

	@Column(name = "genurl", unique = false, nullable = true, insertable = true, updatable = true, length = 200)
	public String getGenurl() {
		return this.genurl;
	}
	/**设置生成地址  */

	public void setGenurl(String value) {
		this.genurl = value;
	}
	/**获取图标名称  */
	

	@Column(name = "icon", unique = false, nullable = true, insertable = true, updatable = true, length = 50)
	public String getIcon() {
		return this.icon;
	}
	/**设置图标名称  */

	public void setIcon(String value) {
		this.icon = value;
	}
	/**获取图  */
	

	@Column(name = "img", unique = false, nullable = true, insertable = true, updatable = true, length = 200)
	public String getImg() {
		return this.img;
	}
	/**设置图  */

	public void setImg(String value) {
		this.img = value;
	}
	/**对象 获取包含商品列表  */
	@Transient
	

	public List<ProductTypeLinkProduct> getListproducttypelinkproduct() {
		return this.listproducttypelinkproduct;
	}
	/**设置包含商品列表  */

	public void setListproducttypelinkproduct(List<ProductTypeLinkProduct> value) {
		this.listproducttypelinkproduct = value;
	}
	/**状态String*/
	private String statusValidOrNotString;
	/**获取状态String*/
	@Transient
	
	public String getStatusValidOrNotString() {
		return statusValidOrNotString;
	}
	/**设置状态String*/
	public void setStatusValidOrNotString(String value) {
		this.statusValidOrNotString=value;
	}
	/**状态Map*/
	private Map<String, Object> statusValidOrNotMap;
	/**获取状态Map*/
	@Transient
	
	public Map<String, Object> getStatusValidOrNotMap() {
		return statusValidOrNotMap;
	}
	/**设置状态Map*/
	public void setStatusValidOrNotMap(Map<String, Object> value) {
		this.statusValidOrNotMap=value;
	}
	/**父IDString*/
	private String parentidString;
	/**获取父IDString*/
	@Transient
	
	public String getParentidString() {
		return parentidString;
	}
	/**设置父IDString*/
	public void setParentidString(String value) {
		this.parentidString=value;
	}
	/**父IDStringid*/
	private String parentidStringid;
	/**获取父IDString*/
	@Transient
	
	public String getParentidStringid() {
		return parentidStringid;
	}
	/**设置父IDString*/
	public void setParentidStringid(String value) {
		this.parentidStringid=value;
	}
	/**孩子List*/
	private List<ProductType> children=new ArrayList<ProductType>();
	/**获取孩子List*/
	@Transient
	
	public List<ProductType> getChildren() {
		return children;
	}
	/**设置孩子List*/
	public void setChildren(List<ProductType> children) {
		this.children = children;
	}
	/**父母*/
	private ProductType parent=null;
	/**获取父母对象ProductType*/
	@Transient
	
	public ProductType getParent() {
		return parent;
	}
	/**设置父母对象ProductType*/
	public void setParent(ProductType parent) {
		this.parent = parent;
	}
	/**父母List*/
	private List<ProductType> parentList;
	/**获取父母List*/
	@Transient
	
	public List<ProductType> getParentList() {
		return parentList;
	}
	/**设置父母List*/
	public void setParentList(List<ProductType> parentList) {
		this.parentList = parentList;
	}
	/**TreeGrid用，形状open,close,null 关闭=close*/
	private String state="closed";
	/**TreeGrid用，形状open,close,null 关闭=close*/
	@Transient
	
	public String getState() {
		return state;
	}
	/**TreeGrid用，形状open,close,null 关闭=close*/
	public void setState(String state) {
		this.state = state;
	}
	/**TreeGrid用，已经被勾选上*/
	private boolean checked=false;
	/**TreeGrid用，已经被勾选上*/
	@Transient
	
	public boolean getChecked() {
		return checked;
	}
	/**TreeGrid用，已经被勾选上*/
	public void setChecked(boolean checked) {
		this.checked = checked;
	}

	/**
	 * 清空ONE MANY对象，用于WS,JSON等场景
	 */
	public void makeNullObj(){
		this.obj1=null;
		this.obj2=null;
		this.obj3=null;
		this.obj4=null;
		this.obj5=null;
		this.statusValidOrNotMap=null;
		this.children=null;
		this.parent=null;
		this.parentList=null;
	}
	/**
	 * 非常严格的检查对象，不能空不能0
	 * @param checkId 是否检查id
	 * @return
	 */
	public boolean errCheckObjHard(boolean checkId){
		if (errCheckObj(checkId))
			return true;
		if(checkId){
			if(0==this.id)
				return true;
		}
		return false;
	}
	/**
	 * 较松的的检查对象，不能空，可以是0
	 * @param checkId 是否检查id
	 * @return
	 */
	public boolean errCheckObj(boolean checkId){
		if(checkId){
			if(this.id==null)
				return true;
		}
		return false;
	}
	/**备用对象1*/
	private Object obj1;
	/**
	 * 获取备用对象1
	 * @return Object
	 */
	@Transient
	
	public Object getObj1() {
		return obj1;
	}
	/**
	 * 设置备用对象1
	 * @param obj1
	 */
	public void setObj1(Object obj1) {
		this.obj1 = obj1;
	}
	/**备用对象2*/
	private Object obj2;
	/**
	 * 获取备用对象2
	 * @return Object
	 */
	@Transient
	
	public Object getObj2() {
		return obj2;
	}
	/**
	 * 设置备用对象2
	 * @param obj2
	 */
	public void setObj2(Object obj2) {
		this.obj2 = obj2;
	}
	/**备用对象3*/
	private Object obj3;
	/**
	 * 获取备用对象3
	 * @return Object
	 */
	@Transient
	
	public Object getObj3() {
		return obj3;
	}
	/**
	 * 设置备用对象3
	 * @param obj3
	 */
	public void setObj3(Object obj3) {
		this.obj3 = obj3;
	}
	/**备用对象4*/
	private Object obj4;
	/**
	 * 获取备用对象4
	 * @return Object
	 */
	@Transient
	
	public Object getObj4() {
		return obj4;
	}
	/**
	 * 设置备用对象4
	 * @param obj4
	 */
	public void setObj4(Object obj4) {
		this.obj4 = obj4;
	}
	/**备用对象5*/
	private Object obj5;
	/**
	 * 获取备用对象5
	 * @return Object
	 */
	@Transient
	
	public Object getObj5() {
		return obj5;
	}
	/**
	 * 设置备用对象5
	 * @param obj5
	 */
	public void setObj5(Object obj5) {
		this.obj5 = obj5;
	}
	/**
	 * Hash，同所有字段相加判断
	 */
	public int hashCode() {
		if(getId()==null)
		return new HashCodeBuilder()
			.append(getId())
			.append(getCkey())
			.append(getChannelName())
			.append(getStatusValidOrNot())
			.append(getParentid())
			.append(getPriority())
			.append(getChildrennum())
			.append(getFamily())
			.append(getGenurl())
			.append(getIcon())
			.append(getImg())
			.toHashCode();
		return new HashCodeBuilder()
			.append(getId())
			.toHashCode();
	}
	/**
	 * 重写，对象是否相同，用ID来判断
	 */
	public boolean equals(Object obj) {
		if(obj instanceof ProductType == false) return false;
		if(this == obj) return true;
		ProductType other = (ProductType)obj;
		return new EqualsBuilder()
			.append(getId(),other.getId())
			.isEquals();
	}
	/**
	 * 转文本
	 */
	@Override
	public String toString() {
		return new ToStringBuilder(this,ToStringStyle.SHORT_PREFIX_STYLE)
			.append(super.toString())
			.append(",Id:",getId())
			.append(",Ckey:",getCkey())
			.append(",ChannelName:",getChannelName())
			.append(",StatusValidOrNot:",getStatusValidOrNot())
			.append(",Parentid:",getParentid())
			.append(",Priority:",getPriority())
			.append(",Childrennum:",getChildrennum())
			.append(",Family:",getFamily())
			.append(",Genurl:",getGenurl())
			.append(",Icon:",getIcon())
			.append(",Img:",getImg())
			.toString();

	}
	/**
	 * 返回JSON之不显示第0级，对于一些不能传递的对象，不进行json编码，比如password明文，用得较少。
	 * @return
	 */
	public String toJsonNotshow(){
		String[] excludesProperties={"null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}
	/**
	 * 返回JSON之不显示第1级，nowshow+notshow1('notshow1'+xxxObj+xxxString+xxxList)
	 * <br>在内部服务通讯时，防止get页面参数过大，通常设置为notshow1，返回时可以是notshow或notshow1
	 * @return
	 */
	public String toJsonNotshow1(){
		String[] excludesProperties={"myname","mynameid","statusValidOrNotString","statusValidOrNotMap","parentidString","parentidStringid","children","parent","parentList","state","checked","obj1","obj2","obj3","obj4","obj5","null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}
	/**
	 * 返回JSON之不显示第2级，nowshow+notshow1+notshow2，用于外部服务通讯，符合对方的api要求
	 * @return
	 */
	public String toJsonNotshow2(){
		String[] excludesProperties={"myname","mynameid","statusValidOrNotString","statusValidOrNotMap","parentidString","parentidStringid","children","parent","parentList","state","checked","obj1","obj2","obj3","obj4","obj5","null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}

/*
//精简构造 商品类型
ProductType productType = new ProductType(
	ckey , //String 关键字  ID的补充 
	channelName , //String 名称   
	statusValidOrNot , //Integer 状态 default=1  
	parentid , //Integer 父ID default=0  
	priority , //Integer 排列顺序 default=99  
	childrennum , //Integer 孩子数量 default=0  
	family , //String 祖先  逗号分开 
	genurl , //String 生成地址   
	icon , //String 图标名称   
	img , //String 图   
	null
);
*/
}
