/*
 * zmax 
 * 
 */


//  
package com.zmax.yijian.common.dal.bean;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.*;
import javax.validation.constraints.*;
import org.hibernate.validator.constraints.*;
import javax.persistence.Entity;
import com.zmax.utils.string.JsonUtilAli;

import org.apache.commons.lang.builder.*;
import java.text.*;
import java.util.*;
import com.zmax.yijian.common.dal.bean.base.BaseEntity;
 
import org.springframework.format.annotation.DateTimeFormat;


/**
 * 业务员<br/>这里放表的说明
 * @author zmax
 * @version 1.0
 * @since 
 */

@Entity
@Table(name = "seller")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)//可读可写
public class Seller extends BaseEntity{
	
	//alias
	public static final String TABLE_ALIAS = "业务员";

	//date formats
	public static final String FORMAT_GMT_IN = DATE_FORMAT;
	public static final String FORMAT_GMT_WORK = DATE_FORMAT;
	
	//columns START
	/**用户ID Integer   */
	@Max(99999999999L)
	
	private Integer id;
	/**级别 Integer default=0  map={'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}*/
	@Max(999L)
	
	private Integer dlevel = 0;
	/**姓名 String   */
	@Length(max=20)
	
	private String name;
	/**身份证号 String   */
	@Length(max=20)
	
	private String idcard;
	/**年龄 Integer  每年加1 */
	@Max(999L)
	
	private Integer age;
	/**性别 String   map={'男':'男','女':'女'}*/
	@Length(max=20)
	
	private String usersex;
	/**入司时间 Date   */
	
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date gmtIn;
	/**就职时间(合作时间) Date   */
	
	@DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	private Date gmtWork;
	/**所在区域 String   */
	@Length(max=20)
	
	private String area;
	/**直接销售总额 Double default=0.00 正数是收入，负数是支出 */
	
	
	private Double mmoney;
	/**下属团队销售总额 Double default=0.00 正数是收入，负数是支出 */
	
	
	private Double mmoneyteam;
	/**总销售金额 Double default=0.0 直接+团队 */
	
	
	private Double mmoneyall;
	/**上级 Integer default=0  */
	@Max(99999999999L)
	
	private Integer parentid = 0;
	/**排列顺序 Integer default=99 数字越小排名越前 */
	@Max(999L)
	
	private Integer priority = 99;
	/**孩子数量 Integer default=0  */
	@Max(99999999999L)
	
	private Integer childrennum = 0;
	/**祖先 String  逗号分开 */
	@Length(max=20)
	
	private String family;
	/**二维码 String  600x600 */
	@Length(max=200)
	
	private String qrimg;
	//columns END
	/**
	 * 设置默认值
	 * @param _this
	 */
	public void makedefault(Seller _this){
		_this.dlevel=0;
		_this.mmoney=0.00;
		_this.mmoneyteam=0.00;
		_this.mmoneyall=0.0;
		_this.parentid=0;
		_this.priority=99;
		_this.childrennum=0;
	}
	public Seller(){
		makedefault(this);
	}
	public Seller(Integer _id){
		this.id=_id;
		makedefault(this);
	}
	/**
	 * 精简版构造，在创建提交数据库时应该使用saveCreate
	 * @param dlevel Integer 级别 default=0  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}
	 * @param name String 姓名   
	 * @param idcard String 身份证号   
	 * @param age Integer 年龄  每年加1 
	 * @param usersex String 性别   {'男':'男','女':'女'}
	 * @param gmtIn Date 入司时间   
	 * @param gmtWork Date 就职时间(合作时间)   
	 * @param area String 所在区域   
	 * @param mmoney Double 直接销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyteam Double 下属团队销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyall Double 总销售金额 default=0.0 直接+团队 
	 * @param parentid Integer 上级 default=0  
	 * @param priority Integer 排列顺序 default=99 数字越小排名越前 
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param qrimg String 二维码  600x600 
	* @param notuse String 没用
	 */
	public Seller(Integer dlevel ,String name ,String idcard ,Integer age ,String usersex ,Date gmtIn ,Date gmtWork ,String area ,Double mmoney ,Double mmoneyteam ,Double mmoneyall ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String qrimg ,String notuse) {
		super();
		this.dlevel = dlevel;
		this.name = name;
		this.idcard = idcard;
		this.age = age;
		this.usersex = usersex;
		this.gmtIn = gmtIn;
		this.gmtWork = gmtWork;
		this.area = area;
		this.mmoney = mmoney;
		this.mmoneyteam = mmoneyteam;
		this.mmoneyall = mmoneyall;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.qrimg = qrimg;
	}
	/**
	 * 不包括自动变量的构造
	 * @param id Integer 用户ID   
	 * @param dlevel Integer 级别 default=0  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}
	 * @param name String 姓名   
	 * @param idcard String 身份证号   
	 * @param age Integer 年龄  每年加1 
	 * @param usersex String 性别   {'男':'男','女':'女'}
	 * @param gmtIn Date 入司时间   
	 * @param gmtWork Date 就职时间(合作时间)   
	 * @param area String 所在区域   
	 * @param mmoney Double 直接销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyteam Double 下属团队销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyall Double 总销售金额 default=0.0 直接+团队 
	 * @param parentid Integer 上级 default=0  
	 * @param priority Integer 排列顺序 default=99 数字越小排名越前 
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param qrimg String 二维码  600x600 
	* @param notuse String 没用
	 */
	public Seller(Integer id ,Integer dlevel ,String name ,String idcard ,Integer age ,String usersex ,Date gmtIn ,Date gmtWork ,String area ,Double mmoney ,Double mmoneyteam ,Double mmoneyall ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String qrimg ,String notuse) {
		super();
		this.id = id;
		this.dlevel = dlevel;
		this.name = name;
		this.idcard = idcard;
		this.age = age;
		this.usersex = usersex;
		this.gmtIn = gmtIn;
		this.gmtWork = gmtWork;
		this.area = area;
		this.mmoney = mmoney;
		this.mmoneyteam = mmoneyteam;
		this.mmoneyall = mmoneyall;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.qrimg = qrimg;
	}
	/**
	 * 全部数据的构造，包括了对象字段
	 * @param id Integer 用户ID   
	 * @param dlevel Integer 级别 default=0  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}
	 * @param name String 姓名   
	 * @param idcard String 身份证号   
	 * @param age Integer 年龄  每年加1 
	 * @param usersex String 性别   {'男':'男','女':'女'}
	 * @param gmtIn Date 入司时间   
	 * @param gmtWork Date 就职时间(合作时间)   
	 * @param area String 所在区域   
	 * @param mmoney Double 直接销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyteam Double 下属团队销售总额 default=0.00 正数是收入，负数是支出 
	 * @param mmoneyall Double 总销售金额 default=0.0 直接+团队 
	 * @param parentid Integer 上级 default=0  
	 * @param priority Integer 排列顺序 default=99 数字越小排名越前 
	 * @param childrennum Integer 孩子数量 default=0  
	 * @param family String 祖先  逗号分开 
	 * @param qrimg String 二维码  600x600 
	* @param notuse String 没用
	 */
	public Seller(Integer id ,Integer dlevel ,String name ,String idcard ,Integer age ,String usersex ,Date gmtIn ,Date gmtWork ,String area ,Double mmoney ,Double mmoneyteam ,Double mmoneyall ,Integer parentid ,Integer priority ,Integer childrennum ,String family ,String qrimg ,String notuse,Object notuse2) {
		super();
		this.id = id;
		this.dlevel = dlevel;
		this.name = name;
		this.idcard = idcard;
		this.age = age;
		this.usersex = usersex;
		this.gmtIn = gmtIn;
		this.gmtWork = gmtWork;
		this.area = area;
		this.mmoney = mmoney;
		this.mmoneyteam = mmoneyteam;
		this.mmoneyall = mmoneyall;
		this.parentid = parentid;
		this.priority = priority;
		this.childrennum = childrennum;
		this.family = family;
		this.qrimg = qrimg;
	}

	/**我的中文名称*/
	private String myname;
	/**我的中文名称*/
	@Transient
	
	//@JSONField(serialize = false)
	public String getMyname() {
		myname=(myname==null)?""+name+" ":myname;
		return myname;
	}
	/**我的中文名称*/
	public void setMyname(String myname) {
		this.myname = myname;
	}
	/**我的带id中文名称*/
	private String mynameid;
	/**我的带id中文名称*/
	@Transient
	
	//@JSONField(serialize = false)
	public String getMynameid() {
		mynameid=(mynameid==null)?"["+id+"]"+name+" ":mynameid;
		return mynameid;
	}
	/**我的带id中文名称*/
	public void setMynameid(String mynameid) {
		this.mynameid = mynameid;
	}
	/**设置主键*/
	public void setId(Integer value) {
		this.id = value;
	}
	/**获取主键*/
	

	@Id 
	@Column(name = "id",  unique = false, nullable = false, insertable = true, updatable = true, length = 11)
	public Integer getId() {
		return this.id;
	}
	
	/**获取级别  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}*/
	

	@Column(name = "dlevel", unique = false, nullable = true, insertable = true, updatable = true, length = 3)
	public Integer getDlevel() {
		return this.dlevel;
	}
	/**设置级别  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}*/

	public void setDlevel(Integer value) {
		this.dlevel = value;
	}
	/**获取姓名  */
	

	@Column(name = "name", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getName() {
		return this.name;
	}
	/**设置姓名  */

	public void setName(String value) {
		this.name = value;
	}
	/**获取身份证号  */
	

	@Column(name = "idcard", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getIdcard() {
		return this.idcard;
	}
	/**设置身份证号  */

	public void setIdcard(String value) {
		this.idcard = value;
	}
	/**获取年龄 每年加1 */
	

	@Column(name = "age", unique = false, nullable = true, insertable = true, updatable = true, length = 3)
	public Integer getAge() {
		return this.age;
	}
	/**设置年龄 每年加1 */

	public void setAge(Integer value) {
		this.age = value;
	}
	/**获取性别  {'男':'男','女':'女'}*/
	

	@Column(name = "usersex", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getUsersex() {
		return this.usersex;
	}
	/**设置性别  {'男':'男','女':'女'}*/

	public void setUsersex(String value) {
		this.usersex = value;
	}
	/**获取入司时间  */
	

	@Column(name = "gmt_in", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public Date getGmtIn() {
		return this.gmtIn;
	}
	/**设置入司时间  */

	public void setGmtIn(Date value) {
		this.gmtIn = value;
	}
	/**获取就职时间(合作时间)  */
	

	@Column(name = "gmt_work", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public Date getGmtWork() {
		return this.gmtWork;
	}
	/**设置就职时间(合作时间)  */

	public void setGmtWork(Date value) {
		this.gmtWork = value;
	}
	/**获取所在区域  */
	

	@Column(name = "area", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getArea() {
		return this.area;
	}
	/**设置所在区域  */

	public void setArea(String value) {
		this.area = value;
	}
	/**获取直接销售总额 正数是收入，负数是支出 */
	

	@Column(name = "mmoney", columnDefinition="double(11,2) default '0.00'", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Double getMmoney() {
		return this.mmoney;
	}
	/**设置直接销售总额 正数是收入，负数是支出 */

	public void setMmoney(Double value) {
		this.mmoney = value;
	}
	/**获取下属团队销售总额 正数是收入，负数是支出 */
	

	@Column(name = "mmoneyteam", columnDefinition="double(11,2) default '0.00'", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Double getMmoneyteam() {
		return this.mmoneyteam;
	}
	/**设置下属团队销售总额 正数是收入，负数是支出 */

	public void setMmoneyteam(Double value) {
		this.mmoneyteam = value;
	}
	/**获取总销售金额 直接+团队 */
	

	@Column(name = "mmoneyall", columnDefinition="double(11,2) default '0.00'", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Double getMmoneyall() {
		return this.mmoneyall;
	}
	/**设置总销售金额 直接+团队 */

	public void setMmoneyall(Double value) {
		this.mmoneyall = value;
	}
	/**获取上级  */
	

	@Column(name = "parentid", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Integer getParentid() {
		return this.parentid;
	}
	/**设置上级  */

	public void setParentid(Integer value) {
		this.parentid = value;
	}
	/**获取排列顺序 数字越小排名越前 */
	

	@Column(name = "priority", unique = false, nullable = true, insertable = true, updatable = true, length = 3)
	public Integer getPriority() {
		return this.priority;
	}
	/**设置排列顺序 数字越小排名越前 */

	public void setPriority(Integer value) {
		this.priority = value;
	}
	/**获取孩子数量  */
	

	@Column(name = "childrennum", unique = false, nullable = true, insertable = true, updatable = true, length = 11)
	public Integer getChildrennum() {
		return this.childrennum;
	}
	/**设置孩子数量  */

	public void setChildrennum(Integer value) {
		this.childrennum = value;
	}
	/**获取祖先 逗号分开 */
	

	@Column(name = "family", unique = false, nullable = true, insertable = true, updatable = true, length = 20)
	public String getFamily() {
		return this.family;
	}
	/**设置祖先 逗号分开 */

	public void setFamily(String value) {
		this.family = value;
	}
	/**获取二维码 600x600 */
	

	@Column(name = "qrimg", unique = false, nullable = true, insertable = true, updatable = true, length = 200)
	public String getQrimg() {
		return this.qrimg;
	}
	/**设置二维码 600x600 */

	public void setQrimg(String value) {
		this.qrimg = value;
	}
	/**级别String*/
	private String dlevelString;
	/**获取级别String*/
	@Transient
	
	public String getDlevelString() {
		return dlevelString;
	}
	/**设置级别String*/
	public void setDlevelString(String value) {
		this.dlevelString=value;
	}
	/**级别Map*/
	private Map<String, Object> dlevelMap;
	/**获取级别Map*/
	@Transient
	
	public Map<String, Object> getDlevelMap() {
		return dlevelMap;
	}
	/**设置级别Map*/
	public void setDlevelMap(Map<String, Object> value) {
		this.dlevelMap=value;
	}
	/**性别String*/
	private String usersexString;
	/**获取性别String*/
	@Transient
	
	public String getUsersexString() {
		return usersexString;
	}
	/**设置性别String*/
	public void setUsersexString(String value) {
		this.usersexString=value;
	}
	/**性别Map*/
	private Map<String, Object> usersexMap;
	/**获取性别Map*/
	@Transient
	
	public Map<String, Object> getUsersexMap() {
		return usersexMap;
	}
	/**设置性别Map*/
	public void setUsersexMap(Map<String, Object> value) {
		this.usersexMap=value;
	}
	/**入司时间String*/
	private String gmtInString;
	/**获取入司时间String*/
	@Transient
	
	public String getGmtInString() {
		if(gmtInString==null && gmtIn!=null)
			gmtInString=new SimpleDateFormat(DATE_FORMAT).format(gmtIn);
		return gmtInString;
	}
	/**设置入司时间String*/
	public void setGmtInString(String value) {
		this.gmtInString=value;
	}
	/**就职时间(合作时间)String*/
	private String gmtWorkString;
	/**获取就职时间(合作时间)String*/
	@Transient
	
	public String getGmtWorkString() {
		if(gmtWorkString==null && gmtWork!=null)
			gmtWorkString=new SimpleDateFormat(DATE_FORMAT).format(gmtWork);
		return gmtWorkString;
	}
	/**设置就职时间(合作时间)String*/
	public void setGmtWorkString(String value) {
		this.gmtWorkString=value;
	}
	/**上级String*/
	private String parentidString;
	/**获取上级String*/
	@Transient
	
	public String getParentidString() {
		return parentidString;
	}
	/**设置上级String*/
	public void setParentidString(String value) {
		this.parentidString=value;
	}
	/**上级Stringid*/
	private String parentidStringid;
	/**获取上级String*/
	@Transient
	
	public String getParentidStringid() {
		return parentidStringid;
	}
	/**设置上级String*/
	public void setParentidStringid(String value) {
		this.parentidStringid=value;
	}
	/**孩子List*/
	private List<Seller> children=new ArrayList<Seller>();
	/**获取孩子List*/
	@Transient
	
	public List<Seller> getChildren() {
		return children;
	}
	/**设置孩子List*/
	public void setChildren(List<Seller> children) {
		this.children = children;
	}
	/**父母*/
	private Seller parent=null;
	/**获取父母对象Seller*/
	@Transient
	
	public Seller getParent() {
		return parent;
	}
	/**设置父母对象Seller*/
	public void setParent(Seller parent) {
		this.parent = parent;
	}
	/**父母List*/
	private List<Seller> parentList;
	/**获取父母List*/
	@Transient
	
	public List<Seller> getParentList() {
		return parentList;
	}
	/**设置父母List*/
	public void setParentList(List<Seller> parentList) {
		this.parentList = parentList;
	}
	/**TreeGrid用，形状open,close,null 关闭=close*/
	private String state="closed";
	/**TreeGrid用，形状open,close,null 关闭=close*/
	@Transient
	
	public String getState() {
		return state;
	}
	/**TreeGrid用，形状open,close,null 关闭=close*/
	public void setState(String state) {
		this.state = state;
	}
	/**TreeGrid用，已经被勾选上*/
	private boolean checked=false;
	/**TreeGrid用，已经被勾选上*/
	@Transient
	
	public boolean getChecked() {
		return checked;
	}
	/**TreeGrid用，已经被勾选上*/
	public void setChecked(boolean checked) {
		this.checked = checked;
	}

	/**
	 * 清空ONE MANY对象，用于WS,JSON等场景
	 */
	public void makeNullObj(){
		this.obj1=null;
		this.obj2=null;
		this.obj3=null;
		this.obj4=null;
		this.obj5=null;
		this.dlevelMap=null;
		this.usersexMap=null;
		this.children=null;
		this.parent=null;
		this.parentList=null;
	}
	/**
	 * 非常严格的检查对象，不能空不能0
	 * @param checkId 是否检查id
	 * @return
	 */
	public boolean errCheckObjHard(boolean checkId){
		if (errCheckObj(checkId))
			return true;
		if(checkId){
			if(0==this.id)
				return true;
		}
		return false;
	}
	/**
	 * 较松的的检查对象，不能空，可以是0
	 * @param checkId 是否检查id
	 * @return
	 */
	public boolean errCheckObj(boolean checkId){
		if(checkId){
			if(this.id==null)
				return true;
		}
		return false;
	}
	/**备用对象1*/
	private Object obj1;
	/**
	 * 获取备用对象1
	 * @return Object
	 */
	@Transient
	
	public Object getObj1() {
		return obj1;
	}
	/**
	 * 设置备用对象1
	 * @param obj1
	 */
	public void setObj1(Object obj1) {
		this.obj1 = obj1;
	}
	/**备用对象2*/
	private Object obj2;
	/**
	 * 获取备用对象2
	 * @return Object
	 */
	@Transient
	
	public Object getObj2() {
		return obj2;
	}
	/**
	 * 设置备用对象2
	 * @param obj2
	 */
	public void setObj2(Object obj2) {
		this.obj2 = obj2;
	}
	/**备用对象3*/
	private Object obj3;
	/**
	 * 获取备用对象3
	 * @return Object
	 */
	@Transient
	
	public Object getObj3() {
		return obj3;
	}
	/**
	 * 设置备用对象3
	 * @param obj3
	 */
	public void setObj3(Object obj3) {
		this.obj3 = obj3;
	}
	/**备用对象4*/
	private Object obj4;
	/**
	 * 获取备用对象4
	 * @return Object
	 */
	@Transient
	
	public Object getObj4() {
		return obj4;
	}
	/**
	 * 设置备用对象4
	 * @param obj4
	 */
	public void setObj4(Object obj4) {
		this.obj4 = obj4;
	}
	/**备用对象5*/
	private Object obj5;
	/**
	 * 获取备用对象5
	 * @return Object
	 */
	@Transient
	
	public Object getObj5() {
		return obj5;
	}
	/**
	 * 设置备用对象5
	 * @param obj5
	 */
	public void setObj5(Object obj5) {
		this.obj5 = obj5;
	}
	/**
	 * Hash，同所有字段相加判断
	 */
	public int hashCode() {
		if(getId()==null)
		return new HashCodeBuilder()
			.append(getId())
			.append(getDlevel())
			.append(getName())
			.append(getIdcard())
			.append(getAge())
			.append(getUsersex())
			.append(getGmtIn())
			.append(getGmtWork())
			.append(getArea())
			.append(getMmoney())
			.append(getMmoneyteam())
			.append(getMmoneyall())
			.append(getParentid())
			.append(getPriority())
			.append(getChildrennum())
			.append(getFamily())
			.append(getQrimg())
			.toHashCode();
		return new HashCodeBuilder()
			.append(getId())
			.toHashCode();
	}
	/**
	 * 重写，对象是否相同，用ID来判断
	 */
	public boolean equals(Object obj) {
		if(obj instanceof Seller == false) return false;
		if(this == obj) return true;
		Seller other = (Seller)obj;
		return new EqualsBuilder()
			.append(getId(),other.getId())
			.isEquals();
	}
	/**
	 * 转文本
	 */
	@Override
	public String toString() {
		return new ToStringBuilder(this,ToStringStyle.SHORT_PREFIX_STYLE)
			.append(super.toString())
			.append(",Id:",getId())
			.append(",Dlevel:",getDlevel())
			.append(",Name:",getName())
			.append(",Idcard:",getIdcard())
			.append(",Age:",getAge())
			.append(",Usersex:",getUsersex())
			.append(",GmtIn:",getGmtIn())
			.append(",GmtWork:",getGmtWork())
			.append(",Area:",getArea())
			.append(",Mmoney:",getMmoney())
			.append(",Mmoneyteam:",getMmoneyteam())
			.append(",Mmoneyall:",getMmoneyall())
			.append(",Parentid:",getParentid())
			.append(",Priority:",getPriority())
			.append(",Childrennum:",getChildrennum())
			.append(",Family:",getFamily())
			.append(",Qrimg:",getQrimg())
			.toString();

	}
	/**
	 * 返回JSON之不显示第0级，对于一些不能传递的对象，不进行json编码，比如password明文，用得较少。
	 * @return
	 */
	public String toJsonNotshow(){
		String[] excludesProperties={"null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}
	/**
	 * 返回JSON之不显示第1级，nowshow+notshow1('notshow1'+xxxObj+xxxString+xxxList)
	 * <br>在内部服务通讯时，防止get页面参数过大，通常设置为notshow1，返回时可以是notshow或notshow1
	 * @return
	 */
	public String toJsonNotshow1(){
		String[] excludesProperties={"myname","mynameid","dlevelString","dlevelMap","usersexString","usersexMap","gmtInString","gmtWorkString","parentidString","parentidStringid","children","parent","parentList","state","checked","obj1","obj2","obj3","obj4","obj5","null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}
	/**
	 * 返回JSON之不显示第2级，nowshow+notshow1+notshow2，用于外部服务通讯，符合对方的api要求
	 * @return
	 */
	public String toJsonNotshow2(){
		String[] excludesProperties={"myname","mynameid","dlevelString","dlevelMap","usersexString","usersexMap","gmtInString","gmtWorkString","parentidString","parentidStringid","children","parent","parentList","state","checked","obj1","obj2","obj3","obj4","obj5","null"};
		String ret=JsonUtilAli.toJSONString(this, null, excludesProperties);
		return ret;
	}

/*
//精简构造 业务员
Seller seller = new Seller(
	dlevel , //Integer 级别 default=0  {'0':'专员业务员','1':'地区经理','2':'省区经理','3':'大区经理','4':'总监','9':'合作企业'}
	name , //String 姓名   
	idcard , //String 身份证号   
	age , //Integer 年龄  每年加1 
	usersex , //String 性别   {'男':'男','女':'女'}
	gmtIn , //Date 入司时间   
	gmtWork , //Date 就职时间(合作时间)   
	area , //String 所在区域   
	mmoney , //Double 直接销售总额 default=0.00 正数是收入，负数是支出 
	mmoneyteam , //Double 下属团队销售总额 default=0.00 正数是收入，负数是支出 
	mmoneyall , //Double 总销售金额 default=0.0 直接+团队 
	parentid , //Integer 上级 default=0  
	priority , //Integer 排列顺序 default=99 数字越小排名越前 
	childrennum , //Integer 孩子数量 default=0  
	family , //String 祖先  逗号分开 
	qrimg , //String 二维码  600x600 
	null
);
*/
}
